version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - BUILD_DATE=${BUILD_DATE}
        - VCS_REF=${VCS_REF}
    ports:
      - "80:80"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    environment:
      - API_URL=${API_URL:-http://api:8000}
      - ENVIRONMENT=${ENVIRONMENT:-production}
    networks:
      - pustu-network
    depends_on:
      - api

  api:
    image: pustu-backend:latest
    build:
      context: ../pustu_backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-pustu}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - FCM_SERVER_KEY=${FCM_SERVER_KEY}
    networks:
      - pustu-network
    depends_on:
      - db
      - redis

  db:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=${DB_NAME:-pustu}
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - pustu-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - pustu-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:alpine
    ports:
      - "443:443"
    volumes:
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - pustu-network
    depends_on:
      - web
      - api

volumes:
  postgres_data:
  redis_data:

networks:
  pustu-network:
    driver: bridge

# Development services (uncomment for local development)
#  adminer:
#    image: adminer
#    ports:
#      - "8080:8080"
#    networks:
#      - pustu-network
#    depends_on:
#      - db
#
#  redis-commander:
#    image: rediscommander/redis-commander
#    ports:
#      - "8081:8081"
#    environment:
#      - REDIS_HOSTS=redis
#    networks:
#      - pustu-network
#    depends_on:
#      - redis

# Monitoring services (uncomment for production)
#  prometheus:
#    image: prom/prometheus
#    ports:
#      - "9090:9090"
#    volumes:
#      - ./prometheus:/etc/prometheus
#      - prometheus_data:/prometheus
#    networks:
#      - pustu-network
#
#  grafana:
#    image: grafana/grafana
#    ports:
#      - "3000:3000"
#    volumes:
#      - grafana_data:/var/lib/grafana
#    networks:
#      - pustu-network
#    depends_on:
#      - prometheus
