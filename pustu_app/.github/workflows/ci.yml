name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  analyze:
    name: Static Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.0'
          channel: 'stable'
      - name: Install dependencies
        run: flutter pub get
      - name: Verify formatting
        run: dart format --output=none --set-exit-if-changed .
      - name: Analyze project source
        run: flutter analyze

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.0'
          channel: 'stable'
      - name: Install dependencies
        run: flutter pub get
      - name: Run tests
        run: flutter test --coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: coverage/lcov.info

  build-android:
    name: Build Android
    needs: [analyze, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.0'
          channel: 'stable'
      - name: Install dependencies
        run: flutter pub get
      - name: Build APK
        run: flutter build apk --release
      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/app-release.apk

  build-ios:
    name: Build iOS
    needs: [analyze, test]
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.0'
          channel: 'stable'
      - name: Install dependencies
        run: flutter pub get
      - name: Build iOS
        run: flutter build ios --release --no-codesign
      - name: Upload IPA
        uses: actions/upload-artifact@v3
        with:
          name: release-ipa
          path: build/ios/iphoneos

  deploy-firebase:
    name: Deploy to Firebase
    needs: [build-android, build-ios]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download APK
        uses: actions/download-artifact@v3
        with:
          name: release-apk
      - name: Deploy to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_ANDROID_APP_ID }}
          token: ${{ secrets.FIREBASE_TOKEN }}
          groups: testers
          file: app-release.apk
          releaseNotes: |
            Changes in this build:
            - ${{ github.event.head_commit.message }}

  deploy-playstore:
    name: Deploy to Play Store
    needs: [build-android]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download APK
        uses: actions/download-artifact@v3
        with:
          name: release-apk
      - name: Release to Play Store
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAYSTORE_ACCOUNT_KEY }}
          packageName: com.pustuapp.queue
          releaseFiles: app-release.apk
          track: internal
          status: completed
          whatsNewDirectory: distribution/whatsnew

  deploy-appstore:
    name: Deploy to App Store
    needs: [build-ios]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download IPA
        uses: actions/download-artifact@v3
        with:
          name: release-ipa
      - name: Deploy to App Store
        uses: apple-actions/upload-testflight@v1
        with:
          app-path: app-release.ipa
          api-key: ${{ secrets.APPSTORE_API_KEY }}
          api-key-id: ${{ secrets.APPSTORE_API_KEY_ID }}
          api-issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}

  notify:
    name: Notify Team
    needs: [deploy-firebase, deploy-playstore, deploy-appstore]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Send Slack Notification
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

env:
  FLUTTER_VERSION: '3.16.0'
